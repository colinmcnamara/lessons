=== While loops
Keeps executing a block of code, as long as a boolean express is True

They test and _if-statement_ but instead of running the code block _once_ they jump back to the top where the _while_ is and repeat it, and keep doing so until the expression is false.

=== problem w/ while loops

sometimes they don't stop....

=== Rule for while loops
. use them sparingly
. review your while statements to make sure that eventually your testing will become false
. *when in doubt, print and test your variables* at the bottom of the whle loop to see what it is doing

=== replacing with function
same concept as the original. Just passing variable up from the functional call below

=== rewriting for for-loops and range

by using the range command - example bellow 

[source,python]
------------------------------------------------
i = 0
numbers = []

# while the variable i is less then 6
for i in range(0, 5):
	#print the number at the top of the list
	print "At the top i is %d" % i
	# append the list numbers w/ the contents of variable "i"
	numbers.append(i)
# increment "i" by one. could also use i += 1
#	i = i + 1
# print out numbers now : and then return the list numbers
	print "Numbers now: ", numbers
# print out the bottom of the list (this looks like a safety net to catch a endless loop)
	print "At the bottom i is %d" % i

# print to screen
print "The numbers: "

# loop through the numbers list. Assign each element to "num"
for num in numbers:
	#print out num (one stagement each for loop)
	print num
	
------------------------------------------------
