=== Modules, Classes and Objects

Apparently the chapter where most people quit.
Transitioning between scripting and development.

=== Classess add consistency 

you can use classes to impart structure. 
This lesson will be the begining in learning about object oriented programming.

=== ACTION -  read more about OOP

=== Modules are like dictionaries

Example dictionary code 

[source, python]
----
# dictionary with a key 'apple' you want then you do this :

mystuff = {'apple': "I AM APPLES!"}
print mystuff['apple']
----

==== Modules are
. A python file with some functions or variables in it
. You then import that file
.. from blah import blah 
.. or import blah (blah = the file / mod you made)
. Then yo ucan access the functions of that module through the '.'(dot) operator

==== Module named +mystuff.py+ w/ a function called +apple+

used in example code

.module we created 
[source, python]
----
def apple():
	print "I AM APPLES!"

# this is just a variable
tangerine = "Living reflection of a dream"
----

.Code that refrenced the module
[source, python]
----
# dictionary with a key 'apple' you want then you do this :

#mystuff = {'apple': "I AM APPLES!"}
#print mystuff['apple']

import mystuff

# Necessary to load the apple function apparently.
mystuff.apple()

def apple():
	print "I AM APPLES!"

print mystuff.tangerine
----
